openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  "/api/v1/persons":
    post:
      tags:
        - person-controller
      summary: Create a new person
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonRequest"
        required: true
      responses:
        '201':
          description: Created a new person
          headers:
            Location:
              description: Path to a new person
              style: simple
              schema:
                type: string
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationErrorResponse"
  "/api/v1/persons/{id}":
    delete:
      tags:
        - person-controller
      summary: Remove Person by ID
      operationId: editPerson_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Person for ID was removed
    patch:
      tags:
        - person-controller
      summary: Update person by ID
      operationId: editPerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonRequest"
        required: true
      responses:
        '200':
          description: Person with ID was updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonResponse"
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationErrorResponse"
        '404':
          description: Not found person for ID
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/api/v1/persons/id":
    get:
      tags:
        - person-controller
      summary: Get person by ID
      operationId: getPerson
      parameters: []
      responses:
        '200':
          description: Person for ID
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonResponse"
        '404':
          description: Not found Person for ID
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorWithMessage"
components:
  schemas:
    ValidationErrorResponse:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    PersonRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
          format: int32
        address:
          type: string
        work:
          type: string
    PersonResponse:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        age:
          type: integer
          format: int32
        address:
          type: string
        work:
          type: string
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    ErrorWithMessage:
      type: object